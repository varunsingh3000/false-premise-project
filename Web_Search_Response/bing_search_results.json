{
    "_type": "SearchResponse",
    "queryContext": {
        "originalQuery": "Why are all quickly verifiable problems also quickly solvable?"
    },
    "webPages": {
        "webSearchUrl": "https://www.bing.com/search?q=Why+are+all+quickly+verifiable+problems+also+quickly+solvable%3f",
        "totalEstimatedMatches": 84700,
        "value": [
            {
                "id": "https://api.bing.microsoft.com/api/v7/#WebPages.0",
                "contractualRules": [
                    {
                        "_type": "ContractualRules/LicenseAttribution",
                        "targetPropertyName": "snippet",
                        "targetPropertyIndex": 0,
                        "mustBeCloseToContent": true,
                        "license": {
                            "name": "CC-BY-SA",
                            "url": "http://creativecommons.org/licenses/by-sa/3.0/"
                        },
                        "licenseNotice": "Text under CC-BY-SA license"
                    }
                ],
                "name": "P versus NP problem - Wikipedia",
                "url": "https://en.wikipedia.org/wiki/P_versus_NP_problem",
                "isFamilyFriendly": true,
                "displayUrl": "https://en.wikipedia.org/wiki/P_versus_NP_problem",
                "snippet": "v t e The P versus NP problem is a major unsolved problem in theoretical computer science. In informal terms, it asks whether every problem whose solution can be quickly verified can also be quickly solved.",
                "dateLastCrawled": "2024-01-07T07:18:00.0000000Z",
                "cachedPageUrl": "http://cc.bingj.com/cache.aspx?q=Why+are+all+quickly+verifiable+problems+also+quickly+solvable%3f&d=4756728168979749&mkt=en-US&setlang=en-US&w=9cX0F_ZEkIlzHCzuRH_lxFRGPThOGNYm",
                "language": "en",
                "isNavigational": false
            },
            {
                "id": "https://api.bing.microsoft.com/api/v7/#WebPages.1",
                "name": "complexity theory - Please explain \"decidability\" and \"verifiability ...",
                "url": "https://cs.stackexchange.com/questions/12068/please-explain-decidability-and-verifiability",
                "about": [
                    {
                        "_type": "CreativeWork",
                        "aggregateRating": {
                            "ratingValue": 0,
                            "reviewCount": 2
                        }
                    }
                ],
                "isFamilyFriendly": true,
                "displayUrl": "https://cs.stackexchange.com/questions/12068",
                "snippet": "A language is called decidable if there exists a method - any method at all - to determine whether a given word belongs to that language or not. However, I fail to find a parallel definition for verifiability. In the Theory of Computation book by Sipser, we find, P = the class of languages for which membership can be decided quickly.",
                "dateLastCrawled": "2024-01-04T10:29:00.0000000Z",
                "cachedPageUrl": "http://cc.bingj.com/cache.aspx?q=Why+are+all+quickly+verifiable+problems+also+quickly+solvable%3f&d=4763093307632410&mkt=en-US&setlang=en-US&w=J_WKpujfpjd2ATILYXMRu3xXWHoqQpQs",
                "language": "en",
                "isNavigational": false
            },
            {
                "id": "https://api.bing.microsoft.com/api/v7/#WebPages.2",
                "contractualRules": [
                    {
                        "_type": "ContractualRules/LicenseAttribution",
                        "targetPropertyName": "snippet",
                        "targetPropertyIndex": 2,
                        "mustBeCloseToContent": true,
                        "license": {
                            "name": "CC-BY-SA",
                            "url": "http://creativecommons.org/licenses/by-sa/3.0/"
                        },
                        "licenseNotice": "Text under CC-BY-SA license"
                    }
                ],
                "name": "NP (complexity) - Wikipedia",
                "url": "https://en.wikipedia.org/wiki/NP_(complexity)",
                "isFamilyFriendly": true,
                "displayUrl": "https://en.wikipedia.org/wiki/NP_(complexity)",
                "snippet": "NP is the set of decision problems solvable in polynomial time by a nondeterministic Turing machine. NP is the set of decision problems verifiable in polynomial time by a deterministic Turing machine. The first definition is the basis for the abbreviation NP; \"nondeterministic, polynomial time\". These two definitions are equivalent because the ...",
                "dateLastCrawled": "2024-01-05T07:13:00.0000000Z",
                "cachedPageUrl": "http://cc.bingj.com/cache.aspx?q=Why+are+all+quickly+verifiable+problems+also+quickly+solvable%3f&d=4748314330661410&mkt=en-US&setlang=en-US&w=9ZXRi9KrWvlvSKNowzG2j47jaF2FzqJt",
                "language": "en",
                "isNavigational": false
            },
            {
                "id": "https://api.bing.microsoft.com/api/v7/#WebPages.3",
                "name": "Searching for Easy Answers to Hard Computational Questions",
                "url": "https://www.scientificamerican.com/article/searching-for-easy-answers-hard-computational-questions/",
                "datePublished": "2012-09-01T00:00:00.0000000",
                "datePublishedDisplayText": "Sep 1, 2012",
                "isFamilyFriendly": true,
                "displayUrl": "https://www.scientificamerican.com/article/searching-for-easy-answers-hard...",
                "snippet": "The “P versus NP” question asks whether tough problems whose solutions can be quickly checked (like a jigsaw puzzle) are, at heart, easily solvable as well. Despite decades of investigation,...",
                "dateLastCrawled": "2023-11-09T19:05:00.0000000Z",
                "cachedPageUrl": "http://cc.bingj.com/cache.aspx?q=Why+are+all+quickly+verifiable+problems+also+quickly+solvable%3f&d=4608594744516334&mkt=en-US&setlang=en-US&w=DhOc3qED6yUvvxbSLI6AHtoCY7Y5SAz5",
                "language": "en",
                "isNavigational": false
            },
            {
                "id": "https://api.bing.microsoft.com/api/v7/#WebPages.4",
                "name": "CS1010: Theory of Computation - Brown University",
                "url": "https://cs.brown.edu/courses/cs101/files/doc/fall2020/Lecture-15-P%20and%20NP.pdf",
                "isFamilyFriendly": true,
                "displayUrl": "https://cs.brown.edu/courses/cs101/files/doc/fall2020/Lecture-15-P and NP.pdf",
                "snippet": "Path Problem Î P. breadth-first algorithm runs in polynomial time: M = On input <G, s, t> where G is a directed graph with nodes s and t (and there are m nodes): Place a mark on node s. Repeat until no additional nodes are marked. Scan all edges of G. If an edge (a,b) is found from a marked node a to an unmarked node b, mark node b.",
                "dateLastCrawled": "2024-01-05T09:53:00.0000000Z",
                "language": "en",
                "isNavigational": false
            },
            {
                "id": "https://api.bing.microsoft.com/api/v7/#WebPages.5",
                "name": "CS1010: Theory of Computation - Brown University",
                "url": "https://cs.brown.edu/courses/csci1010/files/doc/fall2020/Lecture-16-NP%20Completeness.pdf",
                "isFamilyFriendly": true,
                "displayUrl": "https://cs.brown.edu/courses/csci1010/files/doc/fall2020/Lecture-16-NP Completeness.pdf",
                "snippet": "When problem A is efficiently reducible to problem B, an efficient solution to B can be used to solve A efficiently “Efficiently reducible” means in polynomial time If A is polytimereducible to B, we can convert the problem of testing for membership in A to a membership test in B",
                "dateLastCrawled": "2024-01-03T03:15:00.0000000Z",
                "language": "en",
                "isNavigational": false
            },
            {
                "id": "https://api.bing.microsoft.com/api/v7/#WebPages.6",
                "name": "Computability Theory and Complexity | Toptal®",
                "url": "https://www.toptal.com/algorithms/computability-theory-complexity",
                "isFamilyFriendly": true,
                "displayUrl": "https://www.toptal.com/algorithms/computability-theory-complexity",
                "snippet": "P is the set of problems that are solvable in polynomial time. That is, the number of computational steps is bounded by a polynomial function with respect to the problem size. We know that the “Can everyone get a date?” question, also known as bipartite matching problem, is in P. NP is the set of problems that are verifiable in polynomial ...",
                "dateLastCrawled": "2024-01-02T06:58:00.0000000Z",
                "cachedPageUrl": "http://cc.bingj.com/cache.aspx?q=Why+are+all+quickly+verifiable+problems+also+quickly+solvable%3f&d=4847974748606836&mkt=en-US&setlang=en-US&w=8gQhSF09cZecms7e0wSkcfdwU1L8qFk7",
                "language": "en",
                "isNavigational": false
            },
            {
                "id": "https://api.bing.microsoft.com/api/v7/#WebPages.7",
                "name": "Why are NP problems called that way (and NP-hard and NP-complete)?",
                "url": "https://stackoverflow.com/questions/3671429/why-are-np-problems-called-that-way-and-np-hard-and-np-complete",
                "datePublished": "2010-09-09T00:00:00.0000000",
                "datePublishedDisplayText": "Sep 9, 2010",
                "isFamilyFriendly": true,
                "displayUrl": "https://stackoverflow.com/questions/3671429",
                "snippet": "5 Answers Sorted by: 20 P Class of all problems which can be solved by a deterministic Turing machine in polynomial time. NP Class of all problems which can be solved by a non-deterministic Turing machine in polynomial time (they can also be verified by a deterministic Turing machine in polynomial time.) NP-Hard",
                "dateLastCrawled": "2023-12-26T22:56:00.0000000Z",
                "cachedPageUrl": "http://cc.bingj.com/cache.aspx?q=Why+are+all+quickly+verifiable+problems+also+quickly+solvable%3f&d=4741386536821837&mkt=en-US&setlang=en-US&w=cLDmkAmXfvBsIkGYGKmhOvLiZnmVtzPT",
                "language": "en",
                "isNavigational": false
            },
            {
                "id": "https://api.bing.microsoft.com/api/v7/#WebPages.8",
                "name": "Chapter 34: NP-Completeness",
                "url": "http://hscc.cs.nthu.edu.tw/~sheujp/lecture_note/13algorithm/Ch%2034%2013.pdf",
                "isFamilyFriendly": true,
                "displayUrl": "hscc.cs.nthu.edu.tw/~sheujp/lecture_note/13algorithm/Ch 34 13.pdf",
                "snippet": "Given a Boolean formula F, such as. F = ( x y z) ( y z) ( x) is it possible to assign True/False to each variable, such that the overall value of F is true ? Remark: If the answer is YES, F is a satisfiable , and so it is how the name SAT is from. The proofs made by Cook and Levin is a bit complicated, because intuitively they need to show that ...",
                "dateLastCrawled": "2024-01-01T12:15:00.0000000Z",
                "language": "en",
                "isNavigational": false
            },
            {
                "id": "https://api.bing.microsoft.com/api/v7/#WebPages.9",
                "name": "Problems and Solutions Decidability and Complexity - UConn Health",
                "url": "https://health.uconn.edu/bioinformatics/wp-content/uploads/sites/162/2017/11/Computation_Complexity_2015.pdf",
                "isFamilyFriendly": true,
                "displayUrl": "https://health.uconn.edu/bioinformatics/wp-content/uploads/sites/162/2017/11/...",
                "snippet": "Remember P problems also fit the definition of NP, so…. –Is P is a proper subset (P NP) or –Can all problems in NP be solved in P time (P=NP) •If that is the case, then other NP problems such as TSP, permutations, factorization, etc all must have efficient solutions. These solutions have never been found and do not likely exist",
                "dateLastCrawled": "2023-12-03T23:01:00.0000000Z",
                "language": "en",
                "isNavigational": false
            }
        ]
    },
    "rankingResponse": {
        "mainline": {
            "items": [
                {
                    "answerType": "WebPages",
                    "resultIndex": 0,
                    "value": {
                        "id": "https://api.bing.microsoft.com/api/v7/#WebPages.0"
                    }
                },
                {
                    "answerType": "WebPages",
                    "resultIndex": 1,
                    "value": {
                        "id": "https://api.bing.microsoft.com/api/v7/#WebPages.1"
                    }
                },
                {
                    "answerType": "WebPages",
                    "resultIndex": 2,
                    "value": {
                        "id": "https://api.bing.microsoft.com/api/v7/#WebPages.2"
                    }
                },
                {
                    "answerType": "WebPages",
                    "resultIndex": 3,
                    "value": {
                        "id": "https://api.bing.microsoft.com/api/v7/#WebPages.3"
                    }
                },
                {
                    "answerType": "WebPages",
                    "resultIndex": 4,
                    "value": {
                        "id": "https://api.bing.microsoft.com/api/v7/#WebPages.4"
                    }
                },
                {
                    "answerType": "WebPages",
                    "resultIndex": 5,
                    "value": {
                        "id": "https://api.bing.microsoft.com/api/v7/#WebPages.5"
                    }
                },
                {
                    "answerType": "WebPages",
                    "resultIndex": 6,
                    "value": {
                        "id": "https://api.bing.microsoft.com/api/v7/#WebPages.6"
                    }
                },
                {
                    "answerType": "WebPages",
                    "resultIndex": 7,
                    "value": {
                        "id": "https://api.bing.microsoft.com/api/v7/#WebPages.7"
                    }
                },
                {
                    "answerType": "WebPages",
                    "resultIndex": 8,
                    "value": {
                        "id": "https://api.bing.microsoft.com/api/v7/#WebPages.8"
                    }
                },
                {
                    "answerType": "WebPages",
                    "resultIndex": 9,
                    "value": {
                        "id": "https://api.bing.microsoft.com/api/v7/#WebPages.9"
                    }
                }
            ]
        }
    }
}